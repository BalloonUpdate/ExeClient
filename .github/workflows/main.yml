name: Release Build

on:
  push:
    tags: 
      - "*"

jobs:
  build:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Load Cache
        uses: actions/cache@v2
        with: 
          path: ./node_modules
          key: ${{ hashFiles('**/yarn.lock') }}
      
      - name: Update Package Version
        id: checkout-tagname
        shell: "python3 {0}"
        run: |
          import os
          import re
          import json
          ref = os.getenv('GITHUB_REF', '')
          match = re.search(r'(?<=refs/tags/).*', ref)
          tag_name = match[0] if match is not None else '0.0.0'
          packagerJson = None
          with open('package.json', "r", encoding="utf-8") as f:
            packagerJson = json.loads(f.read())
          packagerJson['version'] = tag_name
          with open('package.json', "w+", encoding="utf-8") as f:
            f.write(json.dumps(packagerJson, ensure_ascii=False, sort_keys=False, indent=2))
          print('::set-output name=tag_name::'+tag_name)
      
      - name: Build
        env: 
          tag_name: ${{ steps.checkout-tagname.outputs.tag_name }}
        run: |
          yarn install
          yarn run compile
          yarn run electron
          yarn run _pack -o built/updater-${{ env.tag_name }}.exe -x
          dir
          dir built

      - name: Print Hashes
        env: 
          tag_name: ${{ steps.checkout-tagname.outputs.tag_name }}
        run: |
          python ci\hash_tool.py built/updater-${{ env.tag_name }}.exe

      - name: Upload To Github Release
        uses: xresloader/upload-to-github-release@v1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          file: built/*
          draft: false
          tags: true        
